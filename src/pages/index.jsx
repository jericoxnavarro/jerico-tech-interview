import { useEffect, useState } from 'react';
import { Button, Divider, Stack, Typography } from '@mui/material';
import Head from 'next/head';
import CreateTodoModule from '@/modules/create-todo-dialog';
import TodoCardModule from '@/modules/todo-card';
import { useDispatch } from 'react-redux';

import { GetTodos, getRunningMutationsThunk } from '@/services/api/todo-api';
import { wrapper } from '@/store';
import { updateTodos } from '@/store/todo/todo-slice';

export const getServerSideProps = wrapper.getServerSideProps(({ dispatch }) => async () => {
  try {
    dispatch(GetTodos.initiate());
    const [GetTodosResponse] = await Promise.all(dispatch(getRunningMutationsThunk()));
    const {
      data: { data: todos },
    } = GetTodosResponse;

    return {
      props: {
        todos,
      },
    };
  } catch (e) {
    return {
      props: {
        todos: [],
      },
    };
  }
});

export default function Home(props) {
  const dispatch = useDispatch();
  const [openDialog, setOpenDialog] = useState(false);

  const onCloseDialog = () => {
    setOpenDialog(false);
  };

  const onOpenDialog = () => {
    setOpenDialog(true);
  };

  useEffect(() => {
    dispatch(updateTodos(props?.todos));
  }, [props, dispatch]);

  return (
    <>
      <Head>
        <title>Todo App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Stack height="100vh" width="100vw" bgcolor="white" p="24px" spacing="16px">
        <Typography variant="h3">To-Do</Typography>
        <Divider />

        <Button variant="contained" onClick={onOpenDialog}>
          New Task
        </Button>

        <TodoCardModule />
        <CreateTodoModule isOpen={openDialog} onClose={onCloseDialog} />
      </Stack>
    </>
  );
}
